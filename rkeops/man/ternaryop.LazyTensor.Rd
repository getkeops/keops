% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lazytensor_preprocess.R
\name{ternaryop.LazyTensor}
\alias{ternaryop.LazyTensor}
\title{Build a ternary operation}
\usage{
ternaryop.LazyTensor(x, y, z, opstr, dim_check_type = "sameor1", dim_res = NA)
}
\arguments{
\item{x}{A \code{LazyTensor}, a \code{ComplexLazyTensor}, a vector of numeric values,
or a scalar value.}

\item{y}{A \code{LazyTensor}, a \code{ComplexLazyTensor}, a vector of numeric values,
or a scalar value.}

\item{z}{A \code{LazyTensor}, a \code{ComplexLazyTensor}r, a vector of numeric values,
or a scalar value.}

\item{opstr}{A text string corresponding to an operation.}

\item{dim_check_type}{A string to specify if, and how, we should check input
dimensions.
Supported values are:
\itemize{
\item \code{"same"}: \code{x} and \code{y} should have the same inner dimension;
-\code{"sameor1"} (default): \code{x} and \code{y} should have the same
inner dimension or at least one of them should be of dimension 1;
\item \code{NA}: no dimension restriction.
}}

\item{dim_res}{NA (default) or an integer corresponding to the inner
dimension of the output \code{LazyTensor}. If NA, \strong{dim_res} is set to the
maximum between the inner dimensions of the three input \code{LazyTensor}s.}
}
\value{
An object of class "LazyTensor".
}
\description{
Symbolically applies \code{opstr} operation to \code{x}, \code{y} and \code{z}.
}
\examples{
\dontrun{
# basic example
D <- 3
M <- 100
N <- 150
P <- 200
x <- matrix(runif(M * D), M, D)
y <- matrix(runif(N * D), N, D)
z <- matrix(runif(P * D), P, D)
x_i <- LazyTensor(x, index = 'i')
y_j <- LazyTensor(y, index = 'j')
z_i <- LazyTensor(z, index = 'i')

# symbolic matrix:
tern_xyz <- ternaryop.LazyTensor(x_i, y_j, z_i, "IfElse")
}
}
\author{
Chloe Serre-Combe, Amelie Vernay
}
